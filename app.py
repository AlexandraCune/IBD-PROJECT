from flask import Flask, request, render_template, jsonify, send_from_directory
from werkzeug.utils import secure_filename
import os

# Initialize Flask application
app = Flask(__name__)

DATASET_FOLDER = "dataset"
ALLOWED_EXTENSIONS = {"png", "jpg", "jpeg"}

app.config['DATASET_FOLDER'] = DATASET_FOLDER


if not os.path.exists(DATASET_FOLDER):
    os.makedirs(DATASET_FOLDER)

def allowed_file(filename):
    return '.' in filename and filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS

def load_dataset():
    images = [f for f in os.listdir(DATASET_FOLDER) if allowed_file(f)]
    return images

@app.route("/", methods=["GET", "POST"])
def upload_or_choose_image():
    if request.method == "POST":
        # Verifică dacă este selectată o imagine din dataset
        if "dataset_image" in request.form:
            dataset_image = request.form["dataset_image"]
            file_path = os.path.join(app.config['DATASET_FOLDER'], dataset_image)
            print(f"Selected dataset image path: {file_path}")
            if os.path.exists(file_path):
                # Redirecționeaza catre generate_captions cu calea imaginii selectate
                return generate_captions({"image_path": file_path})
            else:
                return render_template("index.html", error="File not found in dataset", dataset_images=load_dataset())

        return render_template("index.html", error="Invalid selection", dataset_images=load_dataset())

    dataset_images = load_dataset()
    return render_template("index.html", dataset_images=dataset_images)

@app.route("/generate_captions", methods=["POST"])
def generate_captions(data=None):
    # Dacă datele nu sunt trimise explicit, folosește request.json
    if not data:
        data = request.json

    image_path = data.get("image_path")
    if not image_path or not os.path.exists(image_path):
        return jsonify({"status": "error", "message": "Invalid image path"})

    #Aici vom adauga descrierile generate, vom apela modelele de ML
    captions = {
        "Model_1": "Caption generated by Model 1",
        "Model_2": "Caption generated by Model 2",
        "Model_3": "Caption generated by Model 3",
        "Model_4": "Caption generated by Model 4",
    }

    # Render pagina cu descrierile generate
    return render_template("result.html", image_path=image_path, captions=captions)


@app.route("/dataset/images")
def dataset_images_popup():
    dataset_images = load_dataset()
    return render_template("popup.html", dataset_images=dataset_images)

@app.route("/dataset/<filename>")
def dataset_file(filename):
    return send_from_directory(DATASET_FOLDER, filename)

if __name__ == "__main__":
    app.run(debug=True)
